; Test rem (signed remainder) with a range of values
; Store the result of rs1 % rs2 to rd

.extern write_int

.const meta.exit_ok, 0x0001
.const stdio.init, 0x0100
.const stdio.put_byte, 0x0102

.bss
    ; Reserve memory needed by write_int
    write_int.target: .resw 1

.text
.entry
    ; Initialize
    ecalli Z, Z, stdio.init
    la S, write_int.target
    li B, ' '
    ; 0 (remainder of division by zero is the dividend)
    li X, 0
    li Y, 0
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 2147483647 (remainder of division by zero is the dividend)
    li X, 2147483647
    li Y, 0
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; -2147483648 (remainder of division by zero is the dividend)
    li X, -2147483648
    li Y, 0
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 1
    li X, 1
    li Y, 2
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; -5
    li X, -5
    li Y, 20
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 0
    li X, +400
    li Y, +400
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 0
    li X, -400
    li Y, -400
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 0
    li X, +400
    li Y, -400
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 0
    li X, -400
    li Y, +400
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 0
    li X, 9
    li Y, 3
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 1
    li X, 11
    li Y, 2
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 10
    li X, 250
    li Y, 16
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 15
    li X, 255
    li Y, 16
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 0
    li X, 256
    li Y, 16
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 255
    li X, 65535
    li Y, 256
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 0
    li X, 65536
    li Y, 256
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 0
    li X, +144
    li Y, -12
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 5
    li X, +5000000
    li Y, +9
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; -5
    li X, -5000000
    li Y, +9
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 5
    li X, +5000000
    li Y, -9
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; -5
    li X, -5000000
    li Y, -9
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 23647
    li X, 2147483647
    li Y, 30000
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; -23648
    li X, -2147483648
    li Y, 30000
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 2147483646
    li X, 2147483646
    li Y, 2147483647
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; -2147483647
    li X, -2147483647
    li Y, -2147483648
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; -48
    li X, -2147483648
    li Y, -50
    rem A, X, Y
    call R, write_int ecalli Z, B, stdio.put_byte
    ; 0
    li X, -2147483648
    li Y, -1
    rem A, X, Y
    call R, write_int
    ; All done
    ecalli Z, Z, meta.exit_ok
