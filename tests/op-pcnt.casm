; Test pcnt (population count, AKA count set bits) with a range of values
; Store the result of pcnt(rs1) to rd

.extern write_hex

.const meta.exit_ok, 0x0001
.const stdio.init, 0x3000
.const stdio.put_byte, 0x3002

.text
.entry
    ; Initialize
    ecalli Z, Z, stdio.init
    li B, ' '
    ; 0
    li X, 0x00000000
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 1
    li X, 0x00000001
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 1
    li X, 0x80000000
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 1
    li X, 0x00008000
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 1
    li X, 0x00400000
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 2
    li X, 0x80000001
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 2
    li X, 0x00000003
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 2
    li X, 0x10100000
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 3
    li X, 0x00000007
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 4
    li X, 0x0000000f
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 4
    li X, 0xf0000000
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 4
    li X, 0x01010101
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 5
    li X, 0x41104002
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 5
    li X, 0xf0000001
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 6
    li X, 0x33300000
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 7
    li X, 0x1f000300
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 8
    li X, 0x000000ff
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 8
    li X, 0x0000ff00
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 8
    li X, 0x00ff0000
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 8
    li X, 0xff000000
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 9
    li X, 0xc0c0c0c1
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; a
    li X, 0xff300000
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; a
    li X, 0xf020800f
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; b
    li X, 0x000007ff
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; c
    li X, 0x00fff000
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; d
    li X, 0x70666606
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; e
    li X, 0xf0f0f030
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; f
    li X, 0x77777000
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 10
    li X, 0xffff0000
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 10
    li X, 0xff0000ff
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 11
    li X, 0xffff0001
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 12
    li X, 0x7e7e7e00
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 13
    li X, 0x80eeee7d
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 14
    li X, 0x0ff0fff0
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 15
    li X, 0x7bde0bde
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 16
    li X, 0xfbde0bde
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 17
    li X, 0xfbde2bde
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 18
    li X, 0xffff9999
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 19
    li X, 0xfeeeeeee
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 1a
    li X, 0xffffff11
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 1b
    li X, 0xffff979f
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 1c
    li X, 0xffff9f9f
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 1d
    li X, 0xffff9fef
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 1e
    li X, 0xffff9fff
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 1f
    li X, 0xffff7fff
    pcnt A, X call R, write_hex ecalli Z, B, stdio.put_byte
    ; 20
    li X, 0xffffffff
    pcnt A, X call R, write_hex
    ; All done
    ecalli Z, Z, meta.exit_ok
