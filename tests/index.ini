; This INI file is loaded by the capcheck program.
; Each [section] describes a test case used to verify the behavior
; of a Capsule toolchain implementation.

; Command or path to use when assembling source files
casm=casm

; Command or path to use when linking compiled object files
clink=clink

; Command or path to use when running compiled program files
capsule=capsule

; Path to output object files, program files, and stdout logs
output=bin/

; Test cases begin here

[hello-world]
info=A simple and self-contained "Hello, world!" example program.
source=hello-world.casm
stdout=Hello, world!
status=Ok

[hello-world-vanilla]
info=A "Hello, world!" program using more explicit syntax and less \
    compiler magic.
source=hello-world-vanilla.casm
stdout=Hello, world!
status=Ok

[write-hex]
info=Verify the behavior of the "write_hex" utility function \
    which is commonly used by many of the test cases to \
    write the results of computations to stdout.
source=write-hex.casm
source=lib/write-hex.casm
stdout=\
1 2 3 4 5 6 7 8 9 a b c d e f 80 7f ff 999 abc \
1234 8000 8080 ffff 11111 abcde fffff abcdef \
ffffff fffffff 12345678 80000001 fedcba98 ffffffff 0
status=Ok

[stack]
source=stack.casm
source=lib/write-stringz.casm
clinkargs=--stack-length 256
stdout=Hello! Nice! Cool!

[op-and]
info=Verify the behavior of the "and" instruction
source=op-and.casm
source=lib/write-hex.casm
stdout=0 1 0 0 ffffffff 10010010
status=Ok

[op-andi]
info=Verify the behavior of the "andi" instruction
source=op-andi.casm
source=lib/write-hex.casm
stdout=0 1 0 0 ffffffff 0 8421c33c 84218000 33c
status=Ok

[op-lui]
info=Verify the behavior of the "lui" instruction
source=op-lui.casm
source=lib/write-hex.casm
stdout=\
0 10000 800000 ff0000 \
12340000 80000000 ff000000 ffff0000
status=Ok

[op-or]
info=Verify the behavior of the "or" instruction
source=op-or.casm
source=lib/write-hex.casm
stdout=0 1 ffffffff ffffffff ffffffff dc6293c9
status=Ok

[op-ori]
info=Verify the behavior of the "ori" instruction
source=op-ori.casm
source=lib/write-hex.casm
stdout=\
0 1 ffffffff ffffffff ffffffff \
8421c33c ffffffff ffffc33c 8421cfff
status=Ok

[op-max]
info=Verify the behavior of the "max" instruction
source=op-max.casm
source=lib/write-int.casm
stdout=0 1 -1 1 1 2147483647 0 2147483647 256
status=Ok

[op-min]
info=Verify the behavior of the "min" instruction
source=op-min.casm
source=lib/write-int.casm
stdout=0 1 -1 -1 -1 -2147483648 -2147483648 0 128
status=Ok

[op-sll]
info=Verify the behavior of the "sll" instruction
source=op-sll.casm
source=lib/write-hex.casm
stdout=\
73107310 e620e620 31073100 73100000 c4000000 0 e620e620 \
73107310 e620e620 31073100 73100000 c4000000 0 e620e620 \
73107310 e620e620 31073100 73100000 c4000000 0 0 cc41cc40
status=Ok

[op-sra]
info=Verify the behavior of the "sra" instruction
source=op-sra.casm
source=lib/write-hex.casm
stdout=\
73107310 39883988 7310731 fffff310 1cc 0 39883988 \
73107310 39883988 7310731 fffff310 1cc 0 39883988 \
73107310 39883988 7310731 fffff310 1cc 0 ffffffff 1cc41cc4
status=Ok

[op-srl]
info=Verify the behavior of the "srl" instruction
source=op-srl.casm
source=lib/write-hex.casm
stdout=\
73107310 39883988 7310731 f310 1cc 0 39883988 \
73107310 39883988 7310731 f310 1cc 0 39883988 \
73107310 39883988 7310731 f310 1cc 0 0 1cc41cc4
status=Ok

[op-xor]
info=Verify the behavior of the "xor" instruction
source=op-xor.casm
source=lib/write-hex.casm
stdout=0 0 ffffffff ffffffff 0 c4209281
status=Ok

[op-xori]
info=Verify the behavior of the "xori" instruction
source=op-xori.casm
source=lib/write-hex.casm
stdout=0 0 ffffffff ffffffff 0 8421c33c 7bde3cc3 7bde433c 8421ccc3
status=Ok
