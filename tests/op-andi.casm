; Test andi (bitwise AND immediate) with a range of values
; Store the result of rs1 & sign-extended immediate to rd

.extern write_hex

.const meta.exit_ok, 0x0001
.const stdio.init, 0x0100
.const stdio.put_byte, 0x0102

.text
.entry
    ; Initialize
    ecalli Z, Z, stdio.init
    li B, ' '
    ; 0
    li X, 0x00000000
    andi A, X, 0x0000
    call R, write_hex ecalli Z, B, stdio.put_byte
    ; 1
    li X, 0x00000001
    andi A, X, 0x0001
    call R, write_hex ecalli Z, B, stdio.put_byte
    ; 0
    li X, 0x00000000
    andi A, X, 0xffff
    call R, write_hex ecalli Z, B, stdio.put_byte
    ; 0
    li X, 0xffffffff
    andi A, X, 0x0000
    call R, write_hex ecalli Z, B, stdio.put_byte
    ; ffffffff
    li X, 0xffffffff
    andi A, X, 0xffff
    call R, write_hex ecalli Z, B, stdio.put_byte
    ; 0
    li X, 0x8421c33c
    andi A, X, 0x0000
    call R, write_hex ecalli Z, B, stdio.put_byte
    ; 8421c33c
    li X, 0x8421c33c
    andi A, X, 0xffff
    call R, write_hex ecalli Z, B, stdio.put_byte
    ; 84218000
    li X, 0x8421c33c
    andi A, X, 0x8000
    call R, write_hex ecalli Z, B, stdio.put_byte
    ; 33c
    li X, 0x8421c33c
    andi A, X, 0x0fff
    call R, write_hex
    ; All done
    ecalli Z, Z, meta.exit_ok
