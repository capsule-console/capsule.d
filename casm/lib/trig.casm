; This source file implements trigonometic functions such as sine and cosine
; using integer maths.

.export trig_fast_sine
.export trig_fast_cosine

.text
; Return sine(x) * int.max where x = A / 2pi * uint.max
; Does not perform interpolation
.procedure trig_fast_sine:
    beq A, Z, 0.eq_half_or_zero.f
    ; Angles less than a quarter turn: Just index into the table
    li X, 0x40000000
    bltu A, X, 0.lt_quarter.f
    beq A, X, 0.eq_quarter.f
    ; Angles less than a half turn: sin(x) = sin(pi - x)
    li X, 0x80000000
    bltu A, X, 0.lt_half.f
    beq A, X, 0.eq_half_or_zero.f
    ; Angles less than three-quarters turn: sin(x) = -sin(-x)
    li X, 0xC0000000
    bltu A, X, 0.lt_three_quarters.f
    beq A, X, 0.eq_three_quarters.f
    ; Remaining angles: sin(x) = -sin(x - pi)
0.lt_twice_pi:
    ; radians >= 3/4 pi && radians < 2 pi
    ; sin(x) = -sin(x - pi)
    li X, 0x80000000
    sub A, X, A
    ; Fall through to 0.lt_three_quarters
0.lt_three_quarters:
    ; radians >= pi && radians < 3/4 pi
    ; sin(x) = -sin(-x)
    li X, 0x80000000
    add A, A, X
    la X, trig_sine_table
    srli Y, A, 20
    andi Y, Y, 0xfffc
    add X, X, Y
    lw A, X, 0
    neg A, A
    ret R
0.lt_half:
    ; radians >= pi / 2 && radians < pi
    ; sin(x) = sin(pi - x)
    ; X was assigned to half pi right before branching
    sub A, X, A
    ; Fall through to 0.lt_quarter
0.lt_quarter:
    ; radians >= 0 && radians < pi / 2
    la X, trig_sine_table
    srli Y, A, 20
    andi Y, Y, 0xfffc
    add X, X, Y
    lw A, X, 0
    ret R
0.eq_half_or_zero:
    ; radians == pi || radians == 0
    mv A, Z
    ret R
0.eq_quarter:
    ; radians == pi/2
    li A, 0x7fffffff
    ret R
0.eq_three_quarters:
    ; radians == 3/4 pi
    li A, 0x80000000
    ret R
.endproc trig_fast_sine

; Return cosine(x) * int.max where x = A / 2pi * uint.max
; Does not perform interpolation
.procedure trig_fast_cosine:
    ; cos(x) = sin(pi/2 - x)
    li X, 0x40000000
    sub A, X, A
    j trig_fast_sine
.endproc trig_fast_cosine

; This table records Sine(x) * int.max for 256 steps from x = 0 up to x = pi / 2
.rodata trig_sine_table: .word \
    0x00000000, 0x00c90f87, 0x01921d1f, 0x025b26d7, \
    0x03242abe, 0x03ed26e6, 0x04b6195d, 0x057f0034, \
    0x0647d97c, 0x0710a344, 0x07d95b9e, 0x08a2009a, \
    0x096a9049, 0x0a3308bc, 0x0afb6805, 0x0bc3ac35, \
    0x0c8bd35d, 0x0d53db92, 0x0e1bc2e3, 0x0ee38765, \
    0x0fab272b, 0x1072a047, 0x1139f0ce, 0x120116d4, \
    0x12c8106e, 0x138edbb0, 0x145576b1, 0x151bdf85, \
    0x15e21444, 0x16a81304, 0x176dd9de, 0x183366e8, \
    0x18f8b83c, 0x19bdcbf2, 0x1a82a025, 0x1b4732ef, \
    0x1c0b826a, 0x1ccf8cb2, 0x1d934fe5, 0x1e56ca1d, \
    0x1f19f97a, 0x1fdcdc1a, 0x209f701c, 0x2161b39f, \
    0x2223a4c5, 0x22e541ae, 0x23a6887e, 0x24677757, \
    0x25280c5d, 0x25e845b5, 0x26a82185, 0x27679df3, \
    0x2826b927, 0x28e5714a, 0x29a3c484, 0x2a61b101, \
    0x2b1f34eb, 0x2bdc4e6e, 0x2c98fbba, 0x2d553afb, \
    0x2e110a61, 0x2ecc681d, 0x2f875261, 0x3041c760, \
    0x30fbc54c, 0x31b54a5d, 0x326e54c7, 0x3326e2c2, \
    0x33def286, 0x3496824f, 0x354d9056, 0x36041ad8, \
    0x36ba2013, 0x376f9e45, 0x382493af, 0x38d8fe92, \
    0x398cdd31, 0x3a402dd1, 0x3af2eeb6, 0x3ba51e28, \
    0x3c56ba6f, 0x3d07c1d5, 0x3db832a5, 0x3e680b2c, \
    0x3f1749b7, 0x3fc5ec97, 0x4073f21c, 0x4121589a, \
    0x41ce1e64, 0x427a41cf, 0x4325c134, 0x43d09aec, \
    0x447acd4f, 0x452456bc, 0x45cd358e, 0x46756827, \
    0x471cece6, 0x47c3c22e, 0x4869e664, 0x490f57ed, \
    0x49b41532, 0x4a581c9c, 0x4afb6c97, 0x4b9e038f, \
    0x4c3fdff2, 0x4ce10033, 0x4d8162c3, 0x4e210616, \
    0x4ebfe8a3, 0x4f5e08e2, 0x4ffb654c, 0x5097fc5d, \
    0x5133cc93, 0x51ced46d, 0x5269126d, 0x53028517, \
    0x539b2aee, 0x5433027c, 0x54ca0a49, 0x556040e1, \
    0x55f5a4d1, 0x568a34a8, 0x571deef8, 0x57b0d255, \
    0x5842dd53, 0x58d40e8b, 0x59646497, 0x59f3de11, \
    0x5a827999, 0x5b1035ce, 0x5b9d1152, 0x5c290acb, \
    0x5cb420df, 0x5d3e5235, 0x5dc79d7b, 0x5e50015c, \
    0x5ed77c88, 0x5f5e0db2, 0x5fe3b38c, 0x60686cce, \
    0x60ec382f, 0x616f146a, 0x61f1003e, 0x6271fa68, \
    0x62f201ab, 0x637114cb, 0x63ef328e, 0x646c59be, \
    0x64e88925, 0x6563bf91, 0x65ddfbd2, 0x66573cba, \
    0x66cf811f, 0x6746c7d6, 0x67bd0fbb, 0x683257aa, \
    0x68a69e80, 0x6919e31f, 0x698c246b, 0x69fd6149, \
    0x6a6d98a3, 0x6adcc963, 0x6b4af277, 0x6bb812d0, \
    0x6c24295f, 0x6c8f351b, 0x6cf934fa, 0x6d6227f9, \
    0x6dca0d13, 0x6e30e348, 0x6e96a99b, 0x6efb5f11, \
    0x6f5f02b0, 0x6fc19384, 0x70231098, 0x708378fd, \
    0x70e2cbc5, 0x71410803, 0x719e2cd1, 0x71fa3947, \
    0x72552c83, 0x72af05a5, 0x7307c3cf, 0x735f6625, \
    0x73b5ebd0, 0x740b53f9, 0x745f9dd0, 0x74b2c882, \
    0x7504d344, 0x7555bd4a, 0x75a585ce, 0x75f42c09, \
    0x7641af3b, 0x768e0ea4, 0x76d94987, 0x77235f2c, \
    0x776c4eda, 0x77b417de, 0x77fab987, 0x78403327, \
    0x78848412, 0x78c7aba0, 0x7909a92b, 0x794a7c10, \
    0x798a23b0, 0x79c89f6c, 0x7a05eeac, 0x7a4210d7, \
    0x7a7d055a, 0x7ab6cba2, 0x7aef6322, 0x7b26cb4e, \
    0x7b5d039c, 0x7b920b88, 0x7bc5e28e, 0x7bf8882f, \
    0x7c29fbed, 0x7c5a3d4e, 0x7c894bdc, 0x7cb72723, \
    0x7ce3ceb0, 0x7d0f4217, 0x7d3980eb, 0x7d628ac4, \
    0x7d8a5f3e, 0x7db0fdf6, 0x7dd6668d, 0x7dfa98a6, \
    0x7e1d93e8, 0x7e3f57fd, 0x7e5fe492, 0x7e7f3955, \
    0x7e9d55fb, 0x7eba3a38, 0x7ed5e5c5, 0x7ef0585e, \
    0x7f0991c2, 0x7f2191b2, 0x7f3857f4, 0x7f4de44f, \
    0x7f62368e, 0x7f754e7e, 0x7f872bf1, 0x7f97cebb, \
    0x7fa736b3, 0x7fb563b1, 0x7fc25595, 0x7fce0c3d, \
    0x7fd8878c, 0x7fe1c76a, 0x7fe9cbbe, 0x7ff09476, \
    0x7ff62181, 0x7ffa72d0, 0x7ffd8859, 0x7fff6215
